<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Gotchacode]]></title>
  <link href="http://gotchacode.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://gotchacode.com/"/>
  <updated>2014-03-13T14:17:41+05:30</updated>
  <id>http://gotchacode.com/</id>
  <author>
    <name><![CDATA[Vinit Kumar]]></name>
    <email><![CDATA[vinitcool76@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Configure Sublime Text2 for JavaScript Development.]]></title>
    <link href="http://gotchacode.com/2013/02/configure-sublime-text2-for-javascript.html"/>
    <updated>2013-02-24T11:19:00+05:30</updated>
    <id>http://gotchacode.com/2013/02/configure-sublime-text2-for-javascript</id>
    <content type="html"><![CDATA[<div class="css-full-post-content js-full-post-content">
<div dir="ltr" style="text-align: left;" trbidi="on">I recently started using Sublime Text2 full time at work after being a vim user for more than 4 years. Vim is really good but it takes sometime to configure it properly. Well this is not a Vim vs ST2 debate. It is more of a vim user shifting to ST2 Tip.<br /><br />The first thing that you should do is to install package control, it provide really good 3rd party plugins. You can check out the link how to install it.&nbsp;<a href="http://wbond.net/sublime_packages/package_control/installation" target="_blank">Install Package Control</a><br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/-VyTJ6GhccRQ/USn4XUWXanI/AAAAAAAABBU/JM261l4WaZw/s1600/Screen+Shot+2013-02-24+at+4.52.12+PM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="250" src="http://4.bp.blogspot.com/-VyTJ6GhccRQ/USn4XUWXanI/AAAAAAAABBU/JM261l4WaZw/s400/Screen+Shot+2013-02-24+at+4.52.12+PM.png" width="400" /></a></div><br /><br />Once done with that open package manager and install these useful plugins<br /><br /><ul style="text-align: left;"><li>JSHint.</li><li>JSLint.</li><li>DocBlockr.</li><li>AngularJS.</li><li>Mocha &amp; Mocha snippet&nbsp;</li><li>NodeJS.</li><li>Live Reload.</li><li>AMD Module Editor</li><li>Backbone.js</li><li>Pretty JSON</li><li>Require Node.js Module Helper</li></ul><div><br /></div><div>Among, these plugins mocha is the test runner and mocha snippets provides you will snippets to write the tests very fast. Also, there is good plugin for vim mode in Sublime Text2, you can use that if you don't want to waste the muscle memory.&nbsp;I highly recommend the real time linting with JSHint. It will make you so much more&nbsp;productive and improve your code as well. It acts as the first unit test against the code you just wrote.&nbsp;</div><div><br /></div><div>One more important thing, you could set the indentation with tab width equals to 2 spaces. It is a very sane default while writing JavaScript code.</div><div><br /></div><div>What really struck me was that Sublime Text enabled me to do almost everything i did with Vim without going into the pain of configuration. Also, the learning curve is not at all steep so i could get productive real fast.</div></div>
</div>


<div class="css-full-comments-content js-full-comments-content">
<div class="css-full-comment js-full-comment">
  <div class="css-comment-user-link js-comment-user-link">
  <a href="http://www.blogger.com/profile/16586618300856804621">
  <div class="css-comment-name js-comment-name">
    Unknown
  </div>
  </a>
  <div class="css-comment-date js-comment-date">
    2013-02-24T16:08:16.461Z
  </div>
  </div>
  <div class="css-comment-content js-comment-content">
    2013 Wishes: Sublime Text Terminal
  </div>
  <br/>
</div>
<div class="css-full-comment js-full-comment">
  <div class="css-comment-user-link js-comment-user-link">
  <a href="http://www.blogger.com/profile/16586618300856804621">
  <div class="css-comment-name js-comment-name">
    Unknown
  </div>
  </a>
  <div class="css-comment-date js-comment-date">
    2013-02-24T16:08:56.069Z
  </div>
  </div>
  <div class="css-comment-content js-comment-content">
    2013 Wishes: Sublime Text Terminal
  </div>
  <br/>
</div>
<div class="css-full-comment js-full-comment">
  <div class="css-comment-user-link js-comment-user-link">
  <a href="http://www.blogger.com/profile/17194318708068141006">
  <div class="css-comment-name js-comment-name">
    Frank
  </div>
  </a>
  <div class="css-comment-date js-comment-date">
    2013-02-26T22:14:30.778Z
  </div>
  </div>
  <div class="css-comment-content js-comment-content">
    How do you debug javascript using the chrome debugger
  </div>
  <br/>
</div>
<div class="css-full-comment js-full-comment">
  <div class="css-comment-user-link js-comment-user-link">
  <a href="http://www.blogger.com/profile/00121175657676051962">
  <div class="css-comment-name js-comment-name">
    Joel
  </div>
  </a>
  <div class="css-comment-date js-comment-date">
    2013-06-30T01:57:24.119Z
  </div>
  </div>
  <div class="css-comment-content js-comment-content">
    Which mocha plugin are you referring to, the runner? or the snippet package? I&#39;m assuming you mean the runner, but I wasn&#39;t sure at first...and in the interest of clarity for others who may also have this question, perhaps you could clarify?  My experience with the rest of the plugins was smooth, however.
  </div>
  <br/>
</div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Build an Ultra Cheap Computer to Start Programming]]></title>
    <link href="http://gotchacode.com/2012/09/how-to-build-ultra-cheap-computer-to.html"/>
    <updated>2012-09-03T12:06:00+05:30</updated>
    <id>http://gotchacode.com/2012/09/how-to-build-ultra-cheap-computer-to</id>
    <content type="html"><![CDATA[<div class="css-full-post-content js-full-post-content">
<div dir="ltr" style="text-align: left;" trbidi="on"><br /><span style="font-family: Verdana, sans-serif;">You want to start programming but don't have quite the capacity or desire to spend much on it. Here is the solution,you can build your own Raspberry PI based PC. With the availability of cheap computers as low as $25 you can reduce the cost to a figure that wouldn't have been possible &nbsp;even 5 years before.</span><br /><span style="font-family: Verdana, sans-serif;"><br /></span><span style="font-family: Verdana, sans-serif;">Here is what you will need:</span><br /><span style="font-family: Verdana, sans-serif;"><br /></span><br /><div style="text-align: left;"></div><ul style="text-align: left;"><li style="text-align: justify;"><span style="font-family: Verdana, sans-serif;">A Raspberry pi ($25)</span></li><li style="text-align: justify;"><span style="font-family: Verdana, sans-serif;">A prepared SD card($9)at <a href="http://www.ebay.com/itm/SANDISK-16GB-MICRO-SD-HC-MICROSD-MEMORY-CARD-16-GB-/250912887595?pt=PDA_Accessories&amp;hash=item3a6b92d32b" target="_blank">ebay</a></span></li><li style="text-align: justify;"><span style="font-family: Verdana, sans-serif;">A 22 inch Samsung LCD($50) at <a href="http://www.ebay.com/itm/Samsung-SyncMaster-220WM-22-Widescreen-LCD-Monitor-Black-/271046622048?pt=Computer_Monitors&amp;hash=item3f1ba33b60" target="_blank">ebay</a></span></li><li style="text-align: justify;"><span style="font-family: Verdana, sans-serif;">Logitech keyboard mouse bundle($25) at <a href="http://www.ebay.com/itm/Logitech-MK120-Keyboard-Mouse-Desktop-PC-Wired-Slim-Spill-Resistant-Combo-Set-/130760075742?pt=AU_Input_Peripherals&amp;hash=item1e71e869de" target="_blank">ebay</a></span></li><li style="text-align: justify;"><span style="font-family: Verdana, sans-serif;">Micro USB power supply, capable of providing at least 700mA at 5V</span></li><li style="text-align: justify;"><span style="font-family: Verdana, sans-serif;">Ethernet LAN cable</span></li></ul><div class="separator" style="clear: both; text-align: center;"><a href="http://www.raspberrypi.org/wp-content/uploads/2012/04/Raspi_Iso_Blue.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><span style="font-family: Verdana, sans-serif;"><img border="0" height="234" src="http://www.raspberrypi.org/wp-content/uploads/2012/04/Raspi_Iso_Blue.png" width="320" /></span></a></div><div style="text-align: justify;"><span style="font-family: Verdana, sans-serif;"><br /></span></div><span style="font-family: Verdana, sans-serif;"><br /></span><br /><div class="separator" style="clear: both; text-align: justify;"><span style="color: #373737; font-family: Verdana, sans-serif; line-height: 24px; text-align: left;">Now,let me explain, A&nbsp;Raspberry&nbsp;pi is an ultra cheap computer with very basic but&nbsp;sufficient hardware &nbsp;which will cost you just $25. You will need to connect other parts on your own. It is so small in size that when you will receive the shipment you won't believe it could actually be &nbsp;a computer.&nbsp;</span></div><div class="separator" style="clear: both; text-align: justify;"><span style="color: #373737; font-family: Verdana, sans-serif; line-height: 24px; text-align: left;"><br /></span></div><div style="text-align: justify;"><span style="color: #373737;"><span style="font-family: Verdana, sans-serif; line-height: 24px;">Moving on, right now we have Linux as OS, which has to be &nbsp;prepared in SD cards.</span></span></div><div style="text-align: justify;"><span style="color: #373737;"><span style="font-family: Verdana, sans-serif; line-height: 24px;">You can download and prepare your SD cards using the information is this link:&nbsp;<a href="http://www.raspberrypi.org/downloads" target="_blank">SD Cards</a></span></span></div><div style="text-align: justify;"><span style="font-family: Verdana, sans-serif;"><span style="line-height: 24px;"><span style="color: #373737;">As recommended you should start with Raspbian "wheezy". It is based on Debian and it will not give you any trouble setting it up , also it</span>&nbsp;</span><span style="background-color: white; color: #373737; line-height: 24px;">includes Python, gcc, and a range of example applications.</span></span></div><div style="text-align: justify;"><span style="background-color: white; color: #373737; font-family: Verdana, sans-serif; line-height: 24px;"><br /></span></div><div style="text-align: justify;"><span style="background-color: white;"><span style="color: #373737;"><span style="font-family: Verdana, sans-serif; line-height: 24px;">Digital Audio is&nbsp;available&nbsp;via HDMI adapter .Analog stereo audio can be obtained via a 3.5 mm jack.</span></span></span></div><div style="text-align: justify;"><span style="background-color: white;"><span style="color: #373737;"><span style="font-family: Verdana, sans-serif; line-height: 24px;">In order to boot it you need to connect the monitor, mouse and keyboard, insert the SD card containing the OS you prepared and power it on. If you insert a Ethernet cable it will attempt to acquire a DHCP lease at startup. You should note your login and password details from the Downloads page.One logged in, if you want to switch to gui, just type in <b>"startx" </b>.</span></span></span></div><div style="text-align: justify;"><span style="background-color: white;"><span style="color: #373737;"><span style="font-family: Verdana, sans-serif; line-height: 24px;"><br /></span></span></span></div><div style="text-align: left;"><span style="background-color: white;"><span style="color: #373737; font-family: Verdana, sans-serif;"></span></span></div><div style="line-height: 24px; text-align: justify;"><span style="color: #373737; font-family: Verdana, sans-serif;">This setup is definitely worth a try, nothing fancy should be expected, but it does what is promises very well i.e a cheap computer &nbsp;under $150 that can get you or your toddlers get started with the amazing world of programming.</span></div><div style="line-height: 24px; text-align: justify;"><span style="font-family: Verdana, sans-serif;"><span style="color: #373737;"><b>Disadvantages</b>&nbsp;: &nbsp;Still no support for flash, You will need to use&nbsp;</span><span style="color: #373737;">Raspbmc or OpenELEC on an SD card if u want to watch&nbsp;YouTube&nbsp;Videos.</span></span></div><div style="text-align: justify;"><i style="line-height: 24px;"><span style="font-family: Verdana, sans-serif;"><br /></span></i><i style="line-height: 24px;"><span style="font-family: Verdana, sans-serif;">P.S The prices are quoted keeping in mind that the reader wants to spend bare minimum, it can vary little bit depending on a person's taste.</span></i><br /><i style="line-height: 24px;"><span style="font-family: Verdana, sans-serif;">Image courtesy: <a href="http://raspberrypi.org/" target="_blank">Raspberry Pi&nbsp;</a>&nbsp;website.</span></i></div></div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What GNU/Linux Could Learn From Apple]]></title>
    <link href="http://gotchacode.com/2012/09/what-gnulinux-could-learn-from-apple.html"/>
    <updated>2012-09-02T08:01:00+05:30</updated>
    <id>http://gotchacode.com/2012/09/what-gnulinux-could-learn-from-apple</id>
    <content type="html"><![CDATA[<div class="css-full-post-content js-full-post-content">
<div dir="ltr" style="text-align: left;" trbidi="on">A lot of recent posts on Hacker News suggest that Linux is dead on Desktop and OS X killed it. Well I don't think that it is still dead or it will be ever.<br />Instead of Lamenting on it, we should learn from our mistakes and also from success of OS X. Here are some of things we could do:<br /><br /><b>User Interface</b>: This is one place where OS X beats Linux by huge margin, Apple hire the best graphic designers and they put a lot of effort on how it looks and how&nbsp;intuitive is feels. Linux really need to improve on the UI specially we need excellent graphic designers that can create the next gen graphics. We could also take a lesson from Androids, they look awesome and they have a Linux at the core. The problem of fragmentation can be get rid with a unified great looking Desktop Environment that is functional as well as beautiful. We could always have the choice of other DE, but there should be one that could cater of masses of people who just want there OS to work and don't have the technical aptitude to tweak it.<br /><br /><b>Softwares</b>: This is one place where we have a lead. The only problem is that we don't have as much third party developers developing for Linux. One way to fix that is that we could have a central Software center that could provides softwares for almost all the Linux Distributions. Package management system could be merged into one or we could have a same package management in addition to the other package manager specific to that distro.<br /><br /><br /><b>Stability</b>: This is one thing that really needs to be addressed very seriously. No user wants his OS to crash performing an update or release upgrade. These issues should be addressed from the smallest level and only stable kernels should be included. Also advanced filesystem such as ZFS or BRFTS should be included as soon as possible such that we do fast backups and full system rollback.<br /><br /><b>Focus on Developers</b>: OS X earned a huge advantage because it focused on developers and provided everything they need on a very stable environment. We need to beat them in that. We have all the tools , we just need to make it more organized and less painful. Any new release should make it their first priority to see that setting a &nbsp;development environment is as easy as clicking a button on software center or by a unified command that fetches all dependencies. They could be grouped as say Rails Development, Python Development, PHP Development. Surely we can trim these unified packages if we need. But a developer not used to Linux would like to start with his development as soon as possible without learning to mess with the Operating system."<b><i>Just Works</i></b>" is a important factor that we need to focus on<i>.<b>It is very crucial because these are the developer who will build third party apps and availability of these apps could only attract masses to adopt Linux.</b></i><br /><i><b><br /></b></i>We need to play on our strengths rather than trying to imitate Apple. They have their limits, We have freedom to choose, We can offer our OS for free, They can't. We can give away open source softwares for free, They cant do that.With the other Hardware manufactures catching up soon, Apple won't have a next gen leap with their hardware. Android devices have already proved it is possible.<br /><i><b><br /></b></i><i style="font-weight: bold;">Imagine an OS with a UI better than Macs, and free softwares in vast Apt Repositories(just an example..don't kill me for it). Stability and full drivers support. This could be </i><b>Linux </b><b><i>that could really be the </i>Desktop of the Year.&nbsp;</b><br /><b><br /></b><b>P.S Everyone who hates these ideas are welcome to suggest better ones, i am just suggesting ideas and I am sure there are better ones.&nbsp;</b><br /><b><br /></b><b><br /></b><br /><br /></div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Stay Focused and Keep Shipping.]]></title>
    <link href="http://gotchacode.com/2012/09/stay-focused-and-keep-shipping.html"/>
    <updated>2012-09-01T16:12:00+05:30</updated>
    <id>http://gotchacode.com/2012/09/stay-focused-and-keep-shipping</id>
    <content type="html"><![CDATA[<div class="css-full-post-content js-full-post-content">
<div dir="ltr" style="text-align: left;" trbidi="on">It is a famous quote from an artwork at Mark Zuckerberg's workplace. Well this post has nothing to do with Facebook or Mark Zuckerberg.<br />Rather this article will give you some cool hacks/tips on how you can optimize or build your development setup.<br /><br />The important factors hardware, software, Language and services are mentioned here:<br /><br /><ul style="text-align: left;"><li>Hardware: Choose a hardware that gives you least trouble to setup, if possible always have a secondary screen while using &nbsp;a netbook/laptop. More screen real estate is always handy. Use SSD in place of normal SATA hard drive. You will be amazed by how much faster your system will behave.Don't compromise on RAM, the more the memory the better it is. Another important thing is that&nbsp;<u>Never mix your development machine with your desktop machine</u>. You will have less distraction and much better result.I would suggest building your own machine as it will give your more freedom and will save your precious money that you can invest in other gears. If you are inclined to develop on Linux shy away from nvidia graphics. ATI gives fewer problems.A Noise cancelling headphone and a ergonomic keyboard are also a valuable addition.</li></ul><ul style="text-align: left;"><li>Software: If you want a fairly current and stable development environment I would suggest you use something like Ubuntu or Debian as your development OS. They are pretty mainstream, have the largest repository in planet, anything that will be introduced to Linux will reach your pretty soon. Also the biggest benefit is that you won't have to waste countless hours to configure it. Fedora/Arch/Gentoo is good to learn Linux but they take pretty huge amount of time to configure. And if u are a developer who is past that stage probably you won't like to get in that mess. Some may argue about an OS X as a choice of development platform. I would not&nbsp;hesitate&nbsp;to say that it can be an excellent choice given the hardware and operating system is of world class. Also if you developing apps for iOS or OS X you should stick to Apple Ecosystem. The only thing that can bug you is that you can get every development&nbsp;environment free in Ubuntu/Debian for which you might need to loose some money to buy stuff from App Store.One more important thing is that you should invest sometime to learn some very important utilities on a&nbsp;UNIX&nbsp;platform like basic shell scripting, some command line and get&nbsp;acquainted&nbsp;with &nbsp;Vim/Emacs and tmux or screen. Once you master these things it will give a a huge advantage and you will be able to do more efficient&nbsp;development.</li></ul><ul style="text-align: left;"><li>Language : Its purely &nbsp;a matter of choice but having a scripting language such as perl, ruby or python and a low level language such as C will give u a great deal of advantage.Also if you are a web-based guy do learn ruby,&nbsp;JavaScript, CSS.Plus some server side knowledge will always be useful to you.</li></ul><ul style="text-align: left;"><li>Services: Always try to follow and use mainstream and proven services such that you will have greater acceptance.eg: Github. Also blog about your work and subscribe to a mailing list. It will always keep you informed and current.</li></ul><div>In the end, you should always prefer a test driven, well documented clean code such that it will be easier to integrate or spawn newer functionality in your product.</div></div>
</div>

]]></content>
  </entry>
  
</feed>
